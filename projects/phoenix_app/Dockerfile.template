# ---- Build Stage ----
FROM erlang:$ERLANG_VERSION AS elixir-alpine-otp-$ERLANG_VERSION

# elixir expects utf8.
ENV LANG=C.UTF-8

RUN set -xe \
    && curl -fSL -o elixir-src.tar.gz "https://github.com/elixir-lang/elixir/archive/${ELIXIR_VERSION}.tar.gz" \
    && mkdir -p /usr/local/src/elixir \
    && tar -xzC /usr/local/src/elixir --strip-components=1 -f elixir-src.tar.gz \
    && rm elixir-src.tar.gz \
    && cd /usr/local/src/elixir \
    && make install clean \
    && find /usr/local/src/elixir/ -type f -not -regex "/usr/local/src/elixir/lib/[^\/]*/lib.*" -exec rm -rf {} + \
    && find /usr/local/src/elixir/ -type d -depth -empty -delete

CMD ["iex"]

FROM elixir-alpine-otp-$ERLANG_VERSION AS builder

ENV MIX_ENV=prod \
    LANG=C.UTF-8

COPY ./$APP_NAME/config ./config
COPY ./$APP_NAME/lib ./lib
COPY ./$APP_NAME/priv ./priv
COPY ./$APP_NAME/mix.exs .
COPY ./$APP_NAME/mix.lock .

RUN mix local.hex --force && \
    mix local.rebar --force && \
    mix deps.get && \
    mix deps.compile && \
    mix phx.digest && \
    mix release

# ---- Application Stage ----
FROM alpine:3.17
RUN apk add --no-cache --update busybox-extras bash openssl curl

ARG GIT_COMMIT
ARG VERSION

LABEL GIT_COMMIT=$GIT_COMMIT
LABEL VERSION=$VERSION

WORKDIR /app

COPY --from=builder _build .

CMD ["/app/prod/rel/$APP_NAME/bin/$APP_NAME", "start"]
